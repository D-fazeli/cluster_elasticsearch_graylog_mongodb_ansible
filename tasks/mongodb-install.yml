---

- name: --- install mongodb ---
  yum:
    name: "{{ item }}"
    state: present
  with_items:
       - "mongodb-org"

- name: --- config mongodb ----
  template: src={{item.src}} dest={{item.dest}}
  with_items:
     - { src: 'templates/mongod_conf.j2', dest: '/etc/mongod.conf' }
     - { src: 'templates/mongo.initiate.set.j2', dest: '/opt/mongo.initiate.set.js' }
     - { src: 'templates/script-create-db-user-mongo.j2', dest: '/opt/script-create-db-user-mongo' }
     - { src: 'templates/primary_node.j2', dest: '/opt/primary_node.sh' }   
     
- name: --- start mongo ---
  shell: |
    touch /opt/.dbshell
    systemctl start mongod

- name: --- configuration mongodb  cluster ---
  shell: |
     mongo --host {{ item.value.internal_ip }} --port {{ item.value.port }} < /opt/mongo.initiate.set.js
  when:
    - item.value.primary == true
  with_dict: "{{ mongodb_nodes }}"
  run_once: true      

- name: --- restart mongo ---
  shell: |
    systemctl restart mongod

- name: Wait for port 27017 to become open on the host, don't start checking for 5 seconds
  wait_for:
    port: 27017
    delay: 13

- name: --- detect master node ---
  shell: mongo --host 127.0.0.1 --port 27017 --quiet --eval 'db.isMaster().primary'
  run_once: true
  register: master
  
- name: --- set variable master_node ---
  set_fact: master_node="{{ master.stdout.split(':')|first }}"
  with_dict: "{{ mongodb_nodes }}"
  run_once: true

- name: --- create db and user ----
  shell: |
    mongo < /opt/script-create-db-user-mongo
  when:
     - master_node == "{{item.value.hostname}}{{item.value.id}}"
  with_dict: "{{ mongodb_nodes }}"
  run_once: true
  